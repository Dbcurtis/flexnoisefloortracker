#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
codewarnings.enable-external-checkers = True
codewarnings.external-checkers-configuration = {'pylint': {'enabled': True}}
codewarnings.hide-directive-list = [('error.1.pylint-warning',
                                     loc('postproc.py'),
                                     'smeter|0|',
                                     '*(invalid-name)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('noisefloor.py'),
                                     'SMeter|0|.__init__|0|',
                                     '*(invalid-name)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('noisefloor.py'),
                                     'SMeterAvg|0|.__init__|0|',
                                     '*(invalid-name)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('noisefloor.py'),
                                     'Bandreadings|0|.__str__|0|',
                                     '*(invalid-name)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('noisefloor.py'),
                                     'Bandreadings|0|.__repr__|0|',
                                     '*(invalid-name)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('userinput.py'),
                                     '*',
                                     '*(broad-except)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('myserial.py'),
                                     '*',
                                     '*(broad-except)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('bandreadings.py'),
                                     '*',
                                     '*(invalid-name)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('smeteravg.py'),
                                     '*',
                                     '*(invalid-name)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('bandreadings.py'),
                                     'Bandreadings|0|.changefreqs|0|',
                                     '*(expression-not-assigned)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('smeter.py'),
                                     '*',
                                     '*(invalid-name)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('tests/test_bandreadings.py'),
                                     'TestBandreadings|0|.test02_radioaccess'\
                                     '|0|',
                                     '*(expression-not-assigned)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('bandreadings.py'),
                                     'Bandreadings|0|.get_readings|0|',
                                     '*(expression-not-assigned)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('bandreadings.py'),
                                     'Bandreadings|0|.cf_get_readings|0|',
                                     '*(expression-not-assigned)*',
                                     None),
                                    ('error.1.pylint-warning',
                                     loc('tests/test_a05bandreadings.py'),
                                     '*',
                                     '*(broad-except)*',
                                     None),
                                    ('warning.1.variable-not-used',
                                     loc('tests/test_a06localweather.py'),
                                     'TestLocalweather|0|.test03_run_from_Q|'\
                                     '0|',
                                     '_',
                                     None),
                                    ('warning.1.import-not-found',
                                     loc('localweather.py'),
                                     '',
                                     'medfordor',
                                     None),
                                    ('warning.1.import-not-found',
                                     loc('localweather.py'),
                                     '',
                                     'dbtools',
                                     None),
                                    ('warning.1.import-not-found',
                                     loc('localweather.py'),
                                     '',
                                     'medfordor.Medford_or_Info',
                                     None),
                                    ('warning.1.import-not-found',
                                     loc('trackermain.py'),
                                     '',
                                     'localweather',
                                     None),
                                    ('warning.1.import-not-found',
                                     loc('trackermain.py'),
                                     '',
                                     'localweather.LocalWeather',
                                     None),
                                    ('warning.1.variable-not-used',
                                     loc('noisefloor.py'),
                                     'Noisefloor|0|.doit|0|',
                                     '_',
                                     None),
                                    ('warning.1.import-not-found',
                                     loc('flex.py'),
                                     '',
                                     'userinput.UserInput',
                                     None),
                                    ('warning.1.import-not-found',
                                     loc('flex.py'),
                                     '',
                                     'userinput',
                                     None),
                                    ('warning.1.variable-not-used',
                                     loc('tests/test_a07trackermain.py'),
                                     'TestTrackermain|0|.test01a_threaded_si'\
                                     'mple|0|',
                                     '_',
                                     None),
                                    ('warning.1.variable-not-used',
                                     loc('tests/test_a07trackermain.py'),
                                     'aggrfn|0|',
                                     '_',
                                     None),
                                    ('warning.1.variable-not-used',
                                     None,
                                     '*',
                                     '_',
                                     None)]
debug.breakpoints = {loc('dbtools.py'): {181L: (0,
        None,
        1,
        0),
        185L: (0,
               None,
               1,
               0),
        209L: (0,
               None,
               1,
               0),
        225L: (0,
               None,
               1,
               0)},
                     loc('flex.py'): {268L: (0,
        None,
        1,
        0)},
                     loc('localweather.py'): {383L: (0,
        None,
        1,
        0)},
                     loc('noisefloor.py'): {358L: (0,
        None,
        1,
        0),
        412L: (0,
               None,
               1,
               0)},
                     loc('smeter.py'): {94L: (0,
        None,
        1,
        0),
        107L: (0,
               None,
               1,
               0),
        113L: (0,
               None,
               1,
               0)},
                     loc('tests/test_a01flex.py'): {211L: (0,
        None,
        1,
        0),
        214L: (0,
               None,
               1,
               0)},
                     loc('tests/test_a05bandreadings.py'): {152L: (0,
        None,
        1,
        0)},
                     loc('tests/test_a06localweather.py'): {181L: (0,
        None,
        1,
        0),
        189L: (0,
               None,
               1,
               0),
        195L: (0,
               None,
               1,
               0)},
                     loc('tests/test_a07trackermain.py'): {709L: (0,
        None,
        1,
        0)},
                     loc('tests/test_a08trackermain.py'): {709L: (0,
        None,
        1,
        0)},
                     loc('tests/test_b01deck.py'): {216L: (0,
        None,
        1,
        0),
        223L: (0,
               None,
               1,
               0)},
                     loc('tests/test_b02dbtools.py'): {46: (0,
        None,
        1,
        0)},
                     loc('tests/test_b03postproc.py'): {60: (0,
        None,
        1,
        0)},
                     loc('tests/test_deck.py'): {216L: (0,
        None,
        1,
        0),
        223L: (0,
               None,
               1,
               0)},
                     loc('trackermain.py'): {350L: (0,
        None,
        1,
        0),
        422L: (0,
               None,
               1,
               0)}}
debug.err-values = {loc('file:C:/Program Files (x86)/Wing Pro 7.0/src/debug/tserver/_sandbox.py'): {},
                    loc('file:C:/Program Files (x86)/Wing Pro 7.0/src/testing/runners/run_unittests_xml.py'): {},
                    loc('file:C:/Program Files (x86)/Wing Pro 7.1/src/testing/runners/run_unittests_xml.py'): {},
                    loc('file:C:/Program Files (x86)/Wing Pro 7.2/src/testing/runners/run_unittests_xml.py'): {},
                    loc('file:C:/Users/Dan/AppData/Roaming/Wing Pro 7/updates/7.1.0.3/src/testing/runners/run_unittests_xml.py'): {},
                    loc('file:C:/Users/Dan/AppData/Roaming/Wing Pro 7/updates/7.2.2.1/src/testing/runners/run_unittests_xml.py'): {},
                    loc('bandreadings.py'): {},
                    loc('dbtools.py'): {},
                    loc('deleteme.py'): {},
                    loc('flex.py'): {},
                    loc('getports.py'): {},
                    loc('localweather.py'): {},
                    loc('noisefloor.py'): {},
                    loc('postproc.py'): {},
                    loc('tests/test_a03smeteravr.py'): {},
                    loc('tests/test_a06localweather.py'): {},
                    loc('tests/test_a07noisefloor.py'): {},
                    loc('tests/test_a07trackermain.py'): {},
                    loc('tests/test_b02dbtools.py'): {},
                    loc('tests/test_b03postproc.py'): {},
                    loc('tests/test_deck.py'): {'stack[0:11].globals': (-3,
        None,
        None,
        'error',
        None,
        1,
        None,
        1,
        u'<globals dict; len=0>',
        None,
        None,
        0,
        None)},
                    loc('tests/test_noisefloor.py'): {},
                    loc('trackermain.py'): {},
                    loc('userinput.py'): {}}
debug.exceptions-ignored = {loc('file:C:/Program Files/Python37/Lib/unittest/case.py'): {680: True,
        832: True},
                            loc('file:C:/Program Files/Python37/Lib/unittest/loader.py'): {34: True},
                            loc('file:C:/Program Files/Python38/Lib/unittest/case.py'): {753: True,
        765: True,
        905: True,
        921: True,
        966: True}}
debug.show-args-dialog = {loc('trackermain.py'): False}
debug.var-col-widths = [0.32604735883424407,
                        0.6739526411657559]
edit.multi-select-popup-size = (245,
                                118)
gui.perspective-auto = True
gui.perspective-current = 'debug'
gui.perspectives = (1,
                    {'debug': ({},
                               {'windows': [{'name': 'JWpw67Pe91K5VDDHV6CL8n'\
        'CTFgIRO6wG',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': 'perspective_tools_only',
                 'current_pages': [3,
                                   1],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('code-warnings',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': 'perspective_tools_only',
        'current_pages': [4,
                          3],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {}),
                     ('interactive-search',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'launch-id': None}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'launch-id': None}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'locked': False},
        [loc('bandreadings.py'),
         loc('tests/test_bandreadings.py'),
         loc('smeteravg.py'),
         loc('tests/test_smeteravr.py'),
         loc('smeter.py'),
         loc('tests/test_smeter.py'),
         loc('tests/context.py'),
         loc('README.rst'),
         loc('myserial.py'),
         loc('userinput.py'),
         loc('postproc.py'),
         loc('background.py'),
         loc('dbtools.py'),
         loc('tests/test_noisefloor.py'),
         loc('noisefloor.py'),
         loc('file:C:/Program Files/Python37/Lib/unittest/case.py')])},
        'saved_notebook_display': None,
        'split_percents': {0: 0.6265172735760971},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           3),
                          1560305838.297)},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    3),
                                   1560284882.065)},
        'window-alloc': (16,
                         17,
                         1789,
                         1084)}]}),
                     'edit': ({},
                              {'windows': [{'name': 'JWpw67Pe91K5VDDHV6CL8nC'\
        'TFgIRO6wG',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': 'perspective_tools_only',
                 'current_pages': [1,
                                   1],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('code-warnings',
                               'tall',
                               0,
                               {}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': 'perspective_tools_only',
        'current_pages': [3,
                          3],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {}),
                     ('interactive-search',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 12L,
                       'folded-linenos': [],
                       'history': {None: ['jjj = 1\n',
        "f'text{jjj}'\n",
        "f'text{03jjj}'\n",
        "f'text{jjj:03}'\n",
        "f'ZZSM{-91.0+3*2:03};'\n",
        "f'ZZSM{(098+3*2):03};'\n",
        "f'ZZSM{098+3*2:03};'\n",
        "f'ZZSM{98+3*2:03};'\n"]},
                       'launch-id': None,
                       'sel-line': 23L,
                       'sel-line-start': 716L,
                       'selection_end': 716L,
                       'selection_start': 716L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {'filter-text': ''}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'locked': False},
        [loc('file:C:/Program Files/Python37/Lib/unittest/case.py'),
         loc('README.rst'),
         loc('myserial.py'),
         loc('userinput.py'),
         loc('postproc.py'),
         loc('background.py'),
         loc('dbtools.py'),
         loc('tests/test_noisefloor.py'),
         loc('tests/context.py'),
         loc('smeteravg.py'),
         loc('tests/test_smeteravr.py'),
         loc('smeter.py'),
         loc('tests/test_smeter.py'),
         loc('noisefloor.py'),
         loc('tests/test_bandreadings.py'),
         loc('bandreadings.py')])},
        'saved_notebook_display': None,
        'split_percents': {0: 0.3955453149001536},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1560305687.482)},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    1),
                                   1560306302.725)},
        'window-alloc': (16,
                         17,
                         1789,
                         1084)}]}),
                     'user': ({},
                              {'windows': [{'name': 'JWpw67Pe91K5VDDHV6CL8nC'\
        'TFgIRO6wG',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': 'perspective_tools_only',
                 'current_pages': [0,
                                   1],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.1285466126230458,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('code-warnings',
                               'tall',
                               0,
                               {}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': 'perspective_tools_only',
        'current_pages': [5,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.37040441176470584,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {}),
                     ('interactive-search',
                      'wide',
                      0,
                      {}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'launch-id': None}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('symbolic',
        ['sql'])],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'launch-id': None}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'locked': False},
        [loc('README.rst'),
         loc('myserial.py'),
         loc('userinput.py'),
         loc('postproc.py'),
         loc('background.py'),
         loc('dbtools.py'),
         loc('tests/test_noisefloor.py'),
         loc('noisefloor.py'),
         loc('file:C:/Program Files/Python37/Lib/unittest/loader.py'),
         loc('tests/context.py')])},
        'saved_notebook_display': None,
        'split_percents': {0: 0.6265172735760971},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           1),
                          1560038326.6)},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1560037709.118)},
        'window-alloc': (26,
                         82,
                         1747,
                         1042)}]})})
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'm1xo0WBr1um8bJsfRZKXoQ8uzY'\
        'IQpdpV',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [1,
                                   1],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(10,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:C:/Program Files/Python38/Lib/datetime.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python38/Lib/datetime.py'),
                      'date')]},
        loc('file:C:/Program Files/Python38/Lib/site-packages/requests/adapters.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python38/Lib/site-packages/requests/adapters.py'),
                      'BaseAdapter')]},
        loc('file:C:/Program Files/Python38/Lib/unittest/case.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Program Files/Python38/Lib/unittest/case.py'),
                      'addModuleCleanup')]},
        loc('file:C:/Program Files/Python38/Lib/unittest/loader.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Python38/Lib/unittest/loader.py'),
                      'defaultTestLoader')]},
        loc('file:C:/Program Files/Python38/Lib/unittest/suite.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Program Files/Python38/Lib/unittest/suite.py'),
                      'BaseTestSuite')]},
        loc('file:C:/Users/Dan/AppData/Roaming/Wing Pro 7/updates/7.2.2.1/src/testing/runners/wingtest_common.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Users/Dan/AppData/Roaming/Wing Pro 7/updates/7.2.2.1/src/testing/runners/wingtest_common.py'),
                      'CreateOutputStream')]},
        loc('background.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('class def',
        loc('background.py'),
        'Background')]},
        loc('bandreadings.py'): {'expanded-nodes': [[('class def',
        loc('bandreadings.py'),
        'Bandreadings')]],
                                 'selected-nodes': [[('class def',
        loc('bandreadings.py'),
        'Bandreadings')]],
                                 'top-node': [('class def',
        loc('bandreadings.py'),
        'Bandreadings')]},
        loc('dbtools.py'): {'expanded-nodes': [],
                            'selected-nodes': [[('class def',
        loc('dbtools.py'),
        'DBTools')]],
                            'top-node': [('class def',
        loc('dbtools.py'),
        'DBTools')]},
        loc('deck.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('class def',
                                       loc('deck.py'),
                                       'Deck')]},
        loc('localweather.py'): {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': [('class def',
        loc('localweather.py'),
        'ComparableMixin')]},
        loc('noisefloor.py'): {'expanded-nodes': [[('class def',
        loc('noisefloor.py'),
        'Noisefloor')]],
                               'selected-nodes': [[('function def',
        loc('noisefloor.py'),
        'Noisefloor|0|.doit'),
        ('function def',
         loc('noisefloor.py'),
         'Noisefloor|0|.doit')]],
                               'top-node': [('generic attribute',
        loc('noisefloor.py'),
        'CTX')]},
        loc('qdatainfo.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('class def',
        loc('qdatainfo.py'),
        'DataQ')]},
        loc('smeter.py'): {'expanded-nodes': [],
                           'selected-nodes': [[('generic attribute',
        loc('smeter.py'),
        '_SREAD')]],
                           'top-node': [('generic attribute',
        loc('smeter.py'),
        'exc')]},
        loc('tests/test_a06localweather.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('tests/test_a06localweather.py'),
                      'Get_LW')]},
        loc('tests/test_b02dbtools.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tests/test_b02dbtools.py'),
                      'MyTime')]},
        loc('trackermain.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('class def',
        loc('trackermain.py'),
        'Aggratator')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [6,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'documentation'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'pep 526',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': True,
                                       'fSearchText': u'.sleep',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': "'INSERT INTO weather SET Sunset = 15863"\
                                    "75106000000, Sunrise = 1586328050000000"\
                                    ", RecDT = 1586354220000000, WindS = 3.4"\
                                    ", WindD = 280, WindG = 0.0, Humidity = "\
                                    "51.0, TempF = 67.08'\n",
                       'first-line': 26L,
                       'folded-linenos': [],
                       'history': {u'file:C:/Users/Dan/AppData/Roaming/Wing Pro 7/updates/7.2.2.1/src/testing/runners/run_unittests_xml.py': ["a"\
        "a = self.time['dt']\n",
        'aa\n',
        "aa = self.times['dt']\n",
        'lw1.get_DateTime()\n',
        'lw1.get_DateTime(local=False)\n',
        'repr(lw1.get_Weather()))\n',
        'repr(lw1.get_Weather())\n',
        'str(lw1.get_wind())\n',
        "self.times['dt']\n",
        'dt.utc\n',
        'dt\n',
        'utc\n',
        'isinstance(utc,Dtc)\n',
        'utc.timestamp()\n',
        'dt.class()\n',
        'dt.__class__\n',
        'isinstance(dt,localweather.MyTime)\n',
        'sss = str(dt.__class__)\n',
        'sss\n',
        "'MyTime' in sss\n",
        'str\n',
        'result\n']},
                       'launch-id': None,
                       'sel-line': 37L,
                       'sel-line-start': 1289L,
                       'selection_end': 1465L,
                       'selection_start': 1289L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {'filter-text': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('trackermain.py'),
        {'attrib-starts': [('timed_work|0|',
                            449)],
         'code-line': "    queues is the queue dict, but timed_work only use"\
                      "s 'dataQ' from the dict\r\n",
         'first-line': 476L,
         'folded-linenos': [],
         'sel-line': 459L,
         'sel-line-start': 13355L,
         'selection_end': 13365L,
         'selection_start': 13359L,
         'zoom': 0L},
        1586412442.002],
        [loc('qdatainfo.py'),
         {'attrib-starts': [('Qdatainfo|0|',
                             35),
                            ('Qdatainfo|0|.__init__|0|',
                             36)],
          'code-line': '        \r\n',
          'first-line': 37L,
          'folded-linenos': [],
          'sel-line': 39L,
          'sel-line-start': 900L,
          'selection_end': 908L,
          'selection_start': 908L,
          'zoom': 0L},
         1586412548.011],
        [loc('localweather.py'),
         {'attrib-starts': [('LocalWeather|0|',
                             221),
                            ('LocalWeather|0|.gen_sql|0|',
                             272)],
          'code-line': '    def gen_sql(self) -> str:\r\n',
          'first-line': 255L,
          'folded-linenos': [],
          'sel-line': 272L,
          'sel-line-start': 7115L,
          'selection_end': 7130L,
          'selection_start': 7123L,
          'zoom': 0L},
         1586412626.47],
        [loc('trackermain.py'),
         {'attrib-starts': [('Get_LW|0|',
                             219)],
          'code-line': '    content:str = _lw.gen_sql()\r\n',
          'first-line': 213L,
          'folded-linenos': [],
          'sel-line': 227L,
          'sel-line-start': 5932L,
          'selection_end': 5991L,
          'selection_start': 5932L,
          'zoom': 0L},
         1586412726.839],
        [loc('noisefloor.py'),
         {'attrib-starts': [('NFResult|0|',
                             37),
                            ('NFResult|0|.__init__|0|',
                             43)],
          'code-line': '    def __init__(self):\r\n',
          'first-line': 131L,
          'folded-linenos': [],
          'sel-line': 43L,
          'sel-line-start': 1044L,
          'selection_end': 1067L,
          'selection_start': 1067L,
          'zoom': 0L},
         1586412736.931],
        [loc('noisefloor.py'),
         {'attrib-starts': [('Noisefloor|0|',
                             144),
                            ('Noisefloor|0|.doit|0|',
                             302)],
          'code-line': '                        self.oneloop_all_bands()\r\n',
          'first-line': 305L,
          'folded-linenos': [],
          'sel-line': 334L,
          'sel-line-start': 10247L,
          'selection_end': 10293L,
          'selection_start': 10276L,
          'zoom': 0L},
         1586412943.507],
        [loc('noisefloor.py'),
         {'attrib-starts': [('Noisefloor|0|',
                             144),
                            ('Noisefloor|0|.oneloop_all_bands|0|',
                             256)],
          'code-line': '            self._recordprocdata(nfresult)\r\n',
          'first-line': 257L,
          'folded-linenos': [],
          'sel-line': 279L,
          'sel-line-start': 8312L,
          'selection_end': 8344L,
          'selection_start': 8329L,
          'zoom': 0L},
         1586412969.002],
        [loc('noisefloor.py'),
         {'attrib-starts': [('Noisefloor|0|',
                             144),
                            ('Noisefloor|0|._recordprocdata|0|',
                             227)],
          'code-line': '    def _recordprocdata(self, noisefloordata: Sequen'\
                       'ce[Bandreadings]):\r\n',
          'first-line': 205L,
          'folded-linenos': [],
          'sel-line': 227L,
          'sel-line-start': 6620L,
          'selection_end': 6643L,
          'selection_start': 6628L,
          'zoom': 0L},
         1586413029.09],
        [loc('qdatainfo.py'),
         {'attrib-starts': [('NFQ|0|',
                             82),
                            ('NFQ|0|.__init__|0|',
                             83)],
          'code-line': '    def __init__(self,content:List[]):\r\n',
          'first-line': 53L,
          'folded-linenos': [],
          'sel-line': 83L,
          'sel-line-start': 1889L,
          'selection_end': 1924L,
          'selection_start': 1924L,
          'zoom': 0L},
         1586413101.768],
        [loc('trackermain.py'),
         {'attrib-starts': [('Get_LW|0|',
                             219)],
          'code-line': '    content:str = _lw.gen_sql()\r\n',
          'first-line': 218L,
          'folded-linenos': [],
          'sel-line': 227L,
          'sel-line-start': 5932L,
          'selection_end': 5991L,
          'selection_start': 5932L,
          'zoom': 0L},
         1586413126.028],
        [loc('noisefloor.py'),
         {'attrib-starts': [('Noisefloor|0|',
                             144),
                            ('Noisefloor|0|._recordprocdata|0|',
                             227)],
          'code-line': '    def _recordprocdata(self, noisefloordata: Sequen'\
                       'ce[Bandreadings]):\r\n',
          'first-line': 229L,
          'folded-linenos': [],
          'sel-line': 227L,
          'sel-line-start': 6620L,
          'selection_end': 6643L,
          'selection_start': 6628L,
          'zoom': 0L},
         1586413149.832],
        [loc('noisefloor.py'),
         {'attrib-starts': [('Noisefloor|0|',
                             144),
                            ('Noisefloor|0|.oneloop_all_bands|0|',
                             256)],
          'code-line': '            self._recordprocdata(nfresult)\r\n',
          'first-line': 248L,
          'folded-linenos': [],
          'sel-line': 279L,
          'sel-line-start': 8312L,
          'selection_end': 8344L,
          'selection_start': 8329L,
          'zoom': 0L},
         1586413203.816],
        [loc('noisefloor.py'),
         {'attrib-starts': [('Noisefloor|0|',
                             144),
                            ('Noisefloor|0|._recordprocdata|0|',
                             227)],
          'code-line': '        \r\n',
          'first-line': 205L,
          'folded-linenos': [],
          'sel-line': 234L,
          'sel-line-start': 6859L,
          'selection_end': 6867L,
          'selection_start': 6867L,
          'zoom': 0L},
         1586413262.685],
        [loc('qdatainfo.py'),
         {'attrib-starts': [('NFQ|0|',
                             82)],
          'code-line': 'class NFQ(DataQ):\r\n',
          'first-line': 49L,
          'folded-linenos': [],
          'sel-line': 82L,
          'sel-line-start': 1870L,
          'selection_end': 1879L,
          'selection_start': 1876L,
          'zoom': 0L},
         1586413302.717],
        [loc('noisefloor.py'),
         {'attrib-starts': [],
          'code-line': 'from qdatainfo import \r\n',
          'first-line': 2L,
          'folded-linenos': [],
          'sel-line': 25L,
          'sel-line-start': 626L,
          'selection_end': 648L,
          'selection_start': 648L,
          'zoom': 0L},
         1586413382.613],
        [loc('qdatainfo.py'),
         {'attrib-starts': [('NFQ|0|',
                             82)],
          'code-line': 'class NFQ(DataQ):\r\n',
          'first-line': 49L,
          'folded-linenos': [],
          'sel-line': 82L,
          'sel-line-start': 1870L,
          'selection_end': 1879L,
          'selection_start': 1876L,
          'zoom': 0L},
         1586413386.318],
        [loc('noisefloor.py'),
         {'attrib-starts': [('Noisefloor|0|',
                             145),
                            ('Noisefloor|0|._recordprocdata|0|',
                             228)],
          'code-line': '        self.out_queue.put(_nfq)\r\n',
          'first-line': 182L,
          'folded-linenos': [],
          'sel-line': 236L,
          'sel-line-start': 6922L,
          'selection_end': 6953L,
          'selection_start': 6953L,
          'zoom': 0L},
         1586451570.419],
        [loc('noisefloor.py'),
         {'attrib-starts': [('Noisefloor|0|',
                             145),
                            ('Noisefloor|0|.doit|0|',
                             303)],
          'code-line': '                        self.oneloop_all_bands()\r\n',
          'first-line': 317L,
          'folded-linenos': [],
          'sel-line': 335L,
          'sel-line-start': 10298L,
          'selection_end': 10344L,
          'selection_start': 10327L,
          'zoom': 0L},
         1586451615.093],
        [loc('noisefloor.py'),
         {'attrib-starts': [('Noisefloor|0|',
                             145),
                            ('Noisefloor|0|.oneloop_all_bands|0|',
                             257)],
          'code-line': '            self._recordprocdata(nfresult)\r\n',
          'first-line': 249L,
          'folded-linenos': [],
          'sel-line': 280L,
          'sel-line-start': 8363L,
          'selection_end': 8390L,
          'selection_start': 8390L,
          'zoom': 0L},
         1586451640.294],
        [loc('noisefloor.py'),
         {'attrib-starts': [('Noisefloor|0|',
                             145),
                            ('Noisefloor|0|._recordprocdata|0|',
                             228)],
          'code-line': '    def _recordprocdata(self, noisefloordata: Sequen'\
                       'ce[Bandreadings]):\r\n',
          'first-line': 209L,
          'folded-linenos': [],
          'sel-line': 228L,
          'sel-line-start': 6647L,
          'selection_end': 6670L,
          'selection_start': 6655L,
          'zoom': 0L},
         1586451683.512]],
        20),
        'current-loc': loc('bandreadings.py'),
        'editor-state-list': [(loc('file:C:/Program Files/Python38/Lib/site-packages/requests/adapters.py'),
                               {'attrib-starts': [('HTTPAdapter|0|',
        83),
        ('HTTPAdapter|0|.send|0|',
         393)],
                                'code-line': '            raise ConnectionEr'\
        'ror(e, request=request)\n',
                                'first-line': 476L,
                                'folded-linenos': [],
                                'sel-line': 515L,
                                'sel-line-start': 20726L,
                                'selection_end': 20726L,
                                'selection_start': 20726L,
                                'zoom': 0L}),
                              (loc('bandreadings.py'),
                               {'attrib-starts': [],
                                'code-line': '    LC_HANDLER.setFormatter(LC'\
        '_FORMATTER)\r\n',
                                'first-line': 175L,
                                'folded-linenos': [],
                                'sel-line': 418L,
                                'sel-line-start': 14504L,
                                'selection_end': 14545L,
                                'selection_start': 14545L,
                                'zoom': 0L}),
                              (loc('dbtools.py'),
                               {'attrib-starts': [('get_bigint_timestamp|0|',
        26)],
                                'code-line': '        utc = Dtc.fromtimestam'\
        'p(dt.ts)\r\n',
                                'first-line': 17L,
                                'folded-linenos': [],
                                'sel-line': 35L,
                                'sel-line-start': 887L,
                                'selection_end': 887L,
                                'selection_start': 887L,
                                'zoom': 0L}),
                              (loc('deck.py'),
                               {'attrib-starts': [('Deck|0|',
        23),
        ('Deck|0|.load_from_Q|0|',
         136)],
                                'code-line': '                        inQ.ta'\
        'sk_done()\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 154L,
                                'sel-line-start': 3900L,
                                'selection_end': 3939L,
                                'selection_start': 3924L,
                                'zoom': 0L}),
                              (loc('localweather.py'),
                               {'attrib-starts': [('LocalWeather|0|',
        221),
        ('LocalWeather|0|.gen_sql|0|',
         272)],
                                'code-line': '    def gen_sql(self) -> str:'\
        '\r\n',
                                'first-line': 255L,
                                'folded-linenos': [],
                                'sel-line': 272L,
                                'sel-line-start': 7115L,
                                'selection_end': 7130L,
                                'selection_start': 7123L,
                                'zoom': 0L}),
                              (loc('noisefloor.py'),
                               {'attrib-starts': [('Noisefloor|0|',
        145),
        ('Noisefloor|0|._recordprocdata|0|',
         228)],
                                'code-line': '    def _recordprocdata(self, '\
        'noisefloordata: Sequence[Bandreadings]):\r\n',
                                'first-line': 209L,
                                'folded-linenos': [],
                                'sel-line': 228L,
                                'sel-line-start': 6647L,
                                'selection_end': 6670L,
                                'selection_start': 6655L,
                                'zoom': 0L}),
                              (loc('qdatainfo.py'),
                               {'attrib-starts': [('NFQ|0|',
        82),
        ('NFQ|0|.__init__|0|',
         83)],
                                'code-line': '    def __init__(self, content'\
        ': Sequence[Bandreadings]):\r\n',
                                'first-line': 49L,
                                'folded-linenos': [],
                                'sel-line': 83L,
                                'sel-line-start': 1859L,
                                'selection_end': 1879L,
                                'selection_start': 1876L,
                                'zoom': 0L}),
                              (loc('smeter.py'),
                               {'attrib-starts': [('SMeter|0|',
        38)],
                                'code-line': 'class SMeter:\r\n',
                                'first-line': 19L,
                                'folded-linenos': [],
                                'sel-line': 38L,
                                'sel-line-start': 815L,
                                'selection_end': 827L,
                                'selection_start': 821L,
                                'zoom': 0L}),
                              (loc('tests/test_a06localweather.py'),
                               {'attrib-starts': [('TestLocalweather|0|',
        31),
        ('TestLocalweather|0|.test01a_instat|0|',
         65)],
                                'code-line': "            self.assertTrue('T"\
        "ime:' in strr)\r\n",
                                'first-line': 17L,
                                'folded-linenos': [],
                                'sel-line': 84L,
                                'sel-line-start': 1543L,
                                'selection_end': 1587L,
                                'selection_start': 1587L,
                                'zoom': 0L}),
                              (loc('tests/test_b02dbtools.py'),
                               {'attrib-starts': [('Testdbtools|0|',
        18),
        ('Testdbtools|0|.test_a02get_bigint_timestamp|0|',
         101)],
                                'code-line': '        a = 0\r\n',
                                'first-line': 95L,
                                'folded-linenos': [],
                                'sel-line': 125L,
                                'sel-line-start': 3921L,
                                'selection_end': 3934L,
                                'selection_start': 3934L,
                                'zoom': 0L}),
                              (loc('trackermain.py'),
                               {'attrib-starts': [('Get_LW|0|',
        219)],
                                'code-line': '    content: str = _lw.gen_sql'\
        '()\r\n',
                                'first-line': 218L,
                                'folded-linenos': [],
                                'sel-line': 227L,
                                'sel-line-start': 5932L,
                                'selection_end': 5991L,
                                'selection_start': 5932L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('file:C:/Program Files/Python38/Lib/site-packages/requests/adapters.py'),
         loc('bandreadings.py'),
         loc('dbtools.py'),
         loc('deck.py'),
         loc('localweather.py'),
         loc('noisefloor.py'),
         loc('qdatainfo.py'),
         loc('smeter.py'),
         loc('tests/test_a06localweather.py'),
         loc('tests/test_b02dbtools.py'),
         loc('trackermain.py')]),
                               'open_files': [u'C:/Program Files/Python38/Lib/site-packages/requests/adapters.py',
        u'dbtools.py',
        u'deck.py',
        u'localweather.py',
        u'qdatainfo.py',
        u'smeter.py',
        u'tests/test_a06localweather.py',
        u'tests/test_b02dbtools.py',
        u'trackermain.py',
        u'noisefloor.py',
        u'bandreadings.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.6071179344033496},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           6),
                          1586413145.307),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    1),
                                   1586412732.601),
                 'user_data': {}},
        'window-alloc': (222,
                         86,
                         1299,
                         980)}]}
guimgr.recent-documents = [loc('bandreadings.py'),
                           loc('noisefloor.py'),
                           loc('trackermain.py'),
                           loc('qdatainfo.py'),
                           loc('localweather.py'),
                           loc('tests/test_a06localweather.py'),
                           loc('dbtools.py'),
                           loc('tests/test_b02dbtools.py'),
                           loc('deck.py'),
                           loc('smeter.py')]
guimgr.visual-state = {loc('file:C:/Program Files (x86)/Wing Pro 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'): {'a'\
        'ttrib-starts': [('repr|0|',
                          2271)],
        'code-line': 'def repr(obj):\n',
        'first-line': 2255L,
        'folded-linenos': [],
        'sel-line': 2271L,
        'sel-line-start': 70872L,
        'selection_end': 70880L,
        'selection_start': 70876L,
        'zoom': 0L},
                       loc('file:C:/Program Files (x86)/Wing Pro 7.2/resources/builtin-pi-files/__os__/win32/3.8/time.pi'): {'a'\
        'ttrib-starts': [('monotonic|0|',
                          166)],
        'code-line': 'def monotonic():\n',
        'first-line': 150L,
        'folded-linenos': [],
        'sel-line': 166L,
        'sel-line-start': 5239L,
        'selection_end': 5252L,
        'selection_start': 5243L,
        'zoom': 0L},
                       loc('file:C:/Program Files (x86)/Wing Pro 7.2/resources/typeshed/stdlib/3/multiprocessing/synchronize.pyi'): {'a'\
        'ttrib-starts': [('Lock|0|',
                          49)],
        'code-line': 'class Lock(SemLock):\n',
        'first-line': 5L,
        'folded-linenos': [],
        'sel-line': 49L,
        'sel-line-start': 1628L,
        'selection_end': 1638L,
        'selection_start': 1634L,
        'zoom': 0L},
                       loc('file:C:/Program Files (x86)/Wing Pro 7.2/src/testing/runners/run_unittests_xml.py'): {'a'\
        'ttrib-starts': [('main|0|',
                          62)],
        'code-line': '        xmlout.finish()\r\n',
        'first-line': 86L,
        'folded-linenos': [],
        'sel-line': 91L,
        'sel-line-start': 3361L,
        'selection_end': 3361L,
        'selection_start': 3361L,
        'zoom': 0L},
                       loc('file:C:/Program Files (x86)/Wing Pro 7.2/src/testing/runners/wingtest_common.py'): {'a'\
        'ttrib-starts': [('XmlStream|0|',
                          83),
                         ('XmlStream|0|.write|0|',
                          124)],
        'code-line': '        self._acquire_writing_lock()\r\n',
        'first-line': 96L,
        'folded-linenos': [],
        'sel-line': 126L,
        'sel-line-start': 3953L,
        'selection_end': 3953L,
        'selection_start': 3953L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/importlib/_bootstrap.py'): {'a'\
        'ttrib-starts': [('_find_and_load|0|',
                          977)],
        'code-line': '            return _find_and_load_unlocked(name, impor'\
                     't_)\r\n',
        'first-line': 949L,
        'folded-linenos': [],
        'sel-line': 982L,
        'sel-line-start': 33394L,
        'selection_end': 33394L,
        'selection_start': 33394L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/importlib/_bootstrap_external.py'): {'a'\
        'ttrib-starts': [('WindowsRegistryFinder|0|',
                          641),
                         ('WindowsRegistryFinder|0|.find_module|0|',
                          692)],
        'code-line': '        """\r\n',
        'first-line': 692L,
        'folded-linenos': [],
        'sel-line': 697L,
        'sel-line-start': 27620L,
        'selection_end': 27631L,
        'selection_start': 27631L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/json/decoder.py'): {'a'\
        'ttrib-starts': [('JSONDecoder|0|',
                          253),
                         ('JSONDecoder|0|.decode|0|',
                          331)],
        'code-line': '            raise JSONDecodeError("Extra data", s, end'\
                     ')\r\n',
        'first-line': 323L,
        'folded-linenos': [],
        'sel-line': 339L,
        'sel-line-start': 12170L,
        'selection_end': 12170L,
        'selection_start': 12170L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/json/encoder.py'): {'a'\
        'ttrib-starts': [('JSONEncoder|0|',
                          72),
                         ('JSONEncoder|0|.default|0|',
                          159)],
        'code-line': "        raise TypeError(f'Object of type {o.__class__."\
                     "__name__} '\r\n",
        'first-line': 148L,
        'folded-linenos': [],
        'sel-line': 178L,
        'sel-line-start': 6549L,
        'selection_end': 6549L,
        'selection_start': 6549L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/site-packages/mysql/connector/abstracts.py'): {'a'\
        'ttrib-starts': [('MySQLConnectionAbstract|0|',
                          44),
                         ('MySQLConnectionAbstract|0|.config|0|',
                          187)],
        'code-line': "                raise AttributeError(\"Unsupported arg"\
                     "ument '{0}'\".format(key))\n",
        'first-line': 292L,
        'folded-linenos': [],
        'sel-line': 327L,
        'sel-line-start': 11364L,
        'selection_end': 11364L,
        'selection_start': 11364L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/site-packages/mysql/connector/connection_cext.py'): {'a'\
        'ttrib-starts': [('CMySQLConnection|0|',
                          62),
                         ('CMySQLConnection|0|.fetch_eof_status|0|',
                          371)],
        'code-line': '    def fetch_eof_status(self):\n',
        'first-line': 362L,
        'folded-linenos': [],
        'sel-line': 371L,
        'sel-line-start': 12861L,
        'selection_end': 12892L,
        'selection_start': 12892L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/site-packages/mysql/connector/cursor_cext.py'): {'a'\
        'ttrib-starts': [('CMySQLCursor|0|',
                          75),
                         ('CMySQLCursor|0|.execute|0|',
                          222)],
        'code-line': '        if not operation:\n',
        'first-line': 193L,
        'folded-linenos': [],
        'sel-line': 228L,
        'sel-line-start': 7625L,
        'selection_end': 7625L,
        'selection_start': 7625L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/site-packages/serial/serialposix.py'): {'a'\
        'ttrib-starts': [('Serial|0|',
                          246),
                         ('Serial|0|.read|0|',
                          470)],
        'code-line': '    def read(self, size=1):\n',
        'first-line': 453L,
        'folded-linenos': [],
        'sel-line': 470L,
        'sel-line-start': 17837L,
        'selection_end': 17849L,
        'selection_start': 17845L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/site-packages/serial/serialwin32.py'): {'a'\
        'ttrib-starts': [('Serial|0|',
                          20),
                         ('Serial|0|.write|0|',
                          300)],
        'code-line': '            raise portNotOpenError\n',
        'first-line': 268L,
        'folded-linenos': [],
        'sel-line': 303L,
        'sel-line-start': 12750L,
        'selection_end': 12784L,
        'selection_start': 12750L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/statistics.py'): {'a'\
        'ttrib-starts': [('mean|0|',
                          289)],
        'code-line': "        raise StatisticsError('mean requires at least "\
                     "one data point')\r\n",
        'first-line': 289L,
        'folded-linenos': [],
        'sel-line': 309L,
        'sel-line-start': 9685L,
        'selection_end': 9756L,
        'selection_start': 9685L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/unittest/case.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/unittest/loader.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/unittest/suite.py'): {'a'\
        'ttrib-starts': [('TestSuite|0|',
                          91),
                         ('TestSuite|0|.run|0|',
                          101)],
        'code-line': '            if self._cleanup:\r\n',
        'first-line': 120L,
        'folded-linenos': [],
        'sel-line': 125L,
        'sel-line-start': 4044L,
        'selection_end': 4044L,
        'selection_start': 4044L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/codecs.py'): {'a'\
        'ttrib-starts': [('BufferedIncrementalDecoder|0|',
                          302),
                         ('BufferedIncrementalDecoder|0|.decode|0|',
                          318)],
        'code-line': '        data = self.buffer + input\r\n',
        'first-line': 302L,
        'folded-linenos': [],
        'sel-line': 320L,
        'sel-line-start': 11093L,
        'selection_end': 11093L,
        'selection_start': 11093L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/json/__init__.py'): {'a'\
        'ttrib-starts': [('loads|0|',
                          298)],
        'code-line': "            raise TypeError(f'the JSON object must be "\
                     "str, bytes or bytearray, '\r\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 340L,
        'sel-line-start': 13549L,
        'selection_end': 13549L,
        'selection_start': 13549L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/json/encoder.py'): {'a'\
        'ttrib-starts': [('JSONEncoder|0|',
                          72),
                         ('JSONEncoder|0|.default|0|',
                          159)],
        'code-line': "        raise TypeError(f'Object of type {o.__class__."\
                     "__name__} '\r\n",
        'first-line': 143L,
        'folded-linenos': [],
        'sel-line': 178L,
        'sel-line-start': 6549L,
        'selection_end': 6549L,
        'selection_start': 6549L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/multiprocessing/connection.py'): {'a'\
        'ttrib-starts': [('_exhaustive_wait|0|',
                          803)],
        'code-line': '            if res == WAIT_TIMEOUT:\r\n',
        'first-line': 775L,
        'folded-linenos': [],
        'sel-line': 810L,
        'sel-line-start': 25958L,
        'selection_end': 25958L,
        'selection_start': 25958L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/multiprocessing/context.py'): {'a'\
        'ttrib-starts': [('BaseContext|0|',
                          22),
                         ('BaseContext|0|.Event|0|',
                          89)],
        'code-line': '    def Event(self):\r\n',
        'first-line': 64L,
        'folded-linenos': [],
        'sel-line': 89L,
        'sel-line-start': 2475L,
        'selection_end': 2488L,
        'selection_start': 2483L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/multiprocessing/process.py'): {'a'\
        'ttrib-starts': [('BaseProcess|0|',
                          70),
                         ('BaseProcess|0|.start|0|',
                          109)],
        'code-line': "        assert self._popen is None, 'cannot start a pr"\
                     "ocess twice'\r\n",
        'first-line': 88L,
        'folded-linenos': [],
        'sel-line': 114L,
        'sel-line-start': 2682L,
        'selection_end': 2682L,
        'selection_start': 2682L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/multiprocessing/queues.py'): {'a'\
        'ttrib-starts': [('Queue|0|',
                          33),
                         ('Queue|0|.get|0|',
                          10)],
        'code-line': '                        raise Empty\r\n',
        'first-line': 81L,
        'folded-linenos': [],
        'sel-line': 107L,
        'sel-line-start': 3290L,
        'selection_end': 3290L,
        'selection_start': 3290L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/multiprocessing/synchronize.py'): {'a'\
        'ttrib-starts': [('Condition|0|',
                          209),
                         ('Condition|0|.wait|0|',
                          29)],
        'code-line': '            self._woken_count.release()\r\n',
        'first-line': 243L,
        'folded-linenos': [],
        'sel-line': 263L,
        'sel-line-start': 8128L,
        'selection_end': 8128L,
        'selection_start': 8128L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/site-packages/jsonpickle/backend.py'): {'a'\
        'ttrib-starts': [('JSONBackend|0|',
                          5),
                         ('JSONBackend|0|.set_preferred_backend|0|',
                          204)],
        'code-line': '        """\r\n',
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 221L,
        'sel-line-start': 8135L,
        'selection_end': 8141L,
        'selection_start': 8141L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/site-packages/requests/api.py'): {'a'\
        'ttrib-starts': [('request|0|',
                          15)],
        'code-line': '        return session.request(method=method, url=url,'\
                     ' **kwargs)\n',
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 59L,
        'sel-line-start': 2973L,
        'selection_end': 2973L,
        'selection_start': 2973L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/site-packages/serial/serialwin32.py'): {'a'\
        'ttrib-starts': [('Serial|0|',
                          20),
                         ('Serial|0|.read|0|',
                          259)],
        'code-line': '                if not result_ok:\n',
        'first-line': 245L,
        'folded-linenos': [],
        'sel-line': 290L,
        'sel-line-start': 12248L,
        'selection_end': 12248L,
        'selection_start': 12248L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/threading.py'): {'a'\
        'ttrib-starts': [('Barrier|0|',
                          572),
                         ('Barrier|0|._wait|0|',
                          652)],
        'code-line': '            raise BrokenBarrierError\r\n',
        'first-line': 629L,
        'folded-linenos': [],
        'sel-line': 656L,
        'sel-line-start': 23570L,
        'selection_end': 23570L,
        'selection_start': 23570L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/typing.py'): {'a'\
        'ttrib-starts': [('_check_generic|0|',
                          -1)],
        'code-line': "        raise TypeError(f\"Too {'many' if alen > elen "\
                     "else 'few'} parameters for {cls};\"\r\n",
        'first-line': 179L,
        'folded-linenos': [],
        'sel-line': 214L,
        'sel-line-start': 6783L,
        'selection_end': 6783L,
        'selection_start': 6783L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/unittest/case.py'): {'a'\
        'ttrib-starts': [('TestCase|0|',
                          374),
                         ('TestCase|0|.__call__|0|',
                          734)],
        'code-line': '        return self.run(*args, **kwds)\r\n',
        'first-line': 667L,
        'folded-linenos': [],
        'sel-line': 735L,
        'sel-line-start': 27138L,
        'selection_end': 27138L,
        'selection_start': 27138L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/unittest/loader.py'): {'a'\
        'ttrib-starts': [('_FailedTest|0|',
                          22),
                         ('_FailedTest|0|.__getattr__|0|',
                          29),
                         ('_FailedTest|0|.__getattr__|0|.testFailure|0|',
                          32)],
        'code-line': '            raise self._exception\r\n',
        'first-line': 24L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 794L,
        'selection_end': 794L,
        'selection_start': 794L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/unittest/main.py'): {'a'\
        'ttrib-starts': [('TestProgram|0|',
                          54),
                         ('TestProgram|0|.__init__|0|',
                          64)],
        'code-line': '        self.runTests()\r\n',
        'first-line': 95L,
        'folded-linenos': [],
        'sel-line': 100L,
        'sel-line-start': 3773L,
        'selection_end': 3773L,
        'selection_start': 3773L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/unittest/suite.py'): {'a'\
        'ttrib-starts': [('BaseTestSuite|0|',
                          15),
                         ('BaseTestSuite|0|.__call__|0|',
                          82)],
        'code-line': '        return self.run(*args, **kwds)\r\n',
        'first-line': 78L,
        'folded-linenos': [],
        'sel-line': 83L,
        'sel-line-start': 2520L,
        'selection_end': 2520L,
        'selection_start': 2520L,
        'zoom': 0L},
                       loc('file:C:/Users/Dan/AppData/Roaming/Wing Pro 7/updates/7.2.2.1/src/testing/runners/wingtest_common.py'): {'a'\
        'ttrib-starts': [('XmlTestRunner|0|',
                          603),
                         ('XmlTestRunner|0|.run|0|',
                          614)],
        'code-line': '        stopTime = time.time()\n',
        'first-line': 580L,
        'folded-linenos': [],
        'sel-line': 619L,
        'sel-line-start': 20306L,
        'selection_end': 20306L,
        'selection_start': 20306L,
        'zoom': 0L},
                       loc('Logs/deleteme'): {'attrib-starts': [],
        'code-line': '2019-06-09 09:40:18,566 - root - <module> - INFO - use'\
                     'rinput executed as main\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('README.rst'): {'attrib-starts': [],
        'code-line': 'This is the README file for the repeater_ctr_access pr'\
                     'oject.\r\n',
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('SmartSDR CAT User Guide.pdf'): {'attrib-starts': [],
        'code-line': '%PDF-1.5\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('__init__.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('background.py'): {'attrib-starts': [('Background'\
        '|0|',
        13),
        ('Background|0|.__init__|0|',
         17)],
        'code-line': '        _s._td = None\r\n',
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 433L,
        'selection_end': 454L,
        'selection_start': 441L,
        'zoom': 0L},
                       loc('bandreadings.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 30L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 665L,
        'selection_end': 665L,
        'selection_start': 665L,
        'zoom': 0L},
                       loc('daylight.py'): {'attrib-starts': [('Daylight|0|',
        23),
        ('Daylight|0|.__repr__|0|',
         37)],
        'code-line': "        return f'[Daylight: {self.srt.date()}: SR: {se"\
                     "lf.srt.time()}, SS: {self.sst.time()}]'\r\n",
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 38L,
        'sel-line-start': 998L,
        'selection_end': 1026L,
        'selection_start': 1026L,
        'zoom': 0L},
                       loc('dbtools.py'): {'attrib-starts': [('DBTools|0|',
        15),
        ('DBTools|0|.open|0|',
         37)],
        'code-line': '    def open(self):\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 37L,
        'sel-line-start': 938L,
        'selection_end': 950L,
        'selection_start': 946L,
        'zoom': 0L},
                       loc('deck.py'): {'attrib-starts': [('Deck|0|',
        23),
        ('Deck|0|.load_from_Q|0|',
         136)],
        'code-line': '                        inQ.task_done()\r\n',
        'first-line': 117L,
        'folded-linenos': [],
        'sel-line': 154L,
        'sel-line-start': 3900L,
        'selection_end': 3939L,
        'selection_start': 3924L,
        'zoom': 0L},
                       loc('deleteme.py'): {'attrib-starts': [],
        'code-line': '    LF_HANDLER = logging.handlers.RotatingFileHandler('\
                     '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 37L,
        'sel-line-start': 669L,
        'selection_end': 723L,
        'selection_start': 723L,
        'zoom': 0L},
                       loc('flex.py'): {'attrib-starts': [],
        'code-line': '    LC_HANDLER.setFormatter(LC_FORMATTER)\r\n',
        'first-line': 259L,
        'folded-linenos': [],
        'sel-line': 288L,
        'sel-line-start': 8984L,
        'selection_end': 9025L,
        'selection_start': 9025L,
        'zoom': 0L},
                       loc('getports.py'): {'attrib-starts': [('GetPorts|0|',
        15),
        ('GetPorts|0|.get|0|',
         40)],
        'code-line': '        devs = [port.device for port in ports]\r\n',
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 52L,
        'sel-line-start': 1337L,
        'selection_end': 1345L,
        'selection_start': 1345L,
        'zoom': 0L},
                       loc('localweather.py'): {'attrib-starts': [('main|0|',
        330)],
        'code-line': '    a = 0\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 399L,
        'sel-line-start': 11620L,
        'selection_end': 11629L,
        'selection_start': 11629L,
        'zoom': 0L},
                       loc('medfordor.py'): {'attrib-starts': [],
        'code-line': 'from typing import List, Sequence, Dict, Mapping, Any'\
                     '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 118L,
        'selection_end': 171L,
        'selection_start': 118L,
        'zoom': 0L},
                       loc('myserial.py'): {'attrib-starts': [('MySerial|0|',
        35),
        ('MySerial|0|.docmd|0|',
         86)],
        'code-line': '        _sp = self\r\n',
        'first-line': 48L,
        'folded-linenos': [],
        'sel-line': 94L,
        'sel-line-start': 2441L,
        'selection_end': 2441L,
        'selection_start': 2441L,
        'zoom': 0L},
                       loc('noisefloor.py'): {'attrib-starts': [('NFResult|0'\
        '|',
        35),
        ('NFResult|0|.__init__|0|',
         41)],
        'code-line': '    def __init__(self):\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 41L,
        'sel-line-start': 961L,
        'selection_end': 984L,
        'selection_start': 984L,
        'zoom': 0L},
                       loc('postproc.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python3\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('setup.cfg'): {'attrib-starts': [],
        'code-line': '#universal=1',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 245L,
        'selection_end': 257L,
        'selection_start': 257L,
        'zoom': 0L},
                       loc('setup.py'): {'attrib-starts': [],
        'code-line': "    Python_requires='>=3.6',\r\n",
        'first-line': 41L,
        'folded-linenos': [],
        'sel-line': 91L,
        'sel-line-start': 3023L,
        'selection_end': 3049L,
        'selection_start': 3049L,
        'zoom': 0L},
                       loc('smeter.py'): {'attrib-starts': [('SMeter|0|',
        38)],
        'code-line': '\r\n',
        'first-line': 88L,
        'folded-linenos': [],
        'sel-line': 53L,
        'sel-line-start': 1315L,
        'selection_end': 1315L,
        'selection_start': 1315L,
        'zoom': 0L},
                       loc('smeteravg.py'): {'attrib-starts': [('SMeterAvg|0'\
        '|',
        87),
        ('SMeterAvg|0|.__init__|0|',
         95),
        ('SMeterAvg|0|.__init__|0|._init_phase1|0|',
         96)],
        'code-line': '            self.smlist = arg[:]\r\n',
        'first-line': 94L,
        'folded-linenos': [],
        'sel-line': 104L,
        'sel-line-start': 2367L,
        'selection_end': 2399L,
        'selection_start': 2399L,
        'zoom': 0L},
                       loc('tests/context.py'): {'attrib-starts': [],
        'code-line': '# import noisefloor\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 162L,
        'selection_end': 164L,
        'selection_start': 164L,
        'zoom': 0L},
                       loc('tests/debugdatagencodeexamples.py'): {'attrib-st'\
        'arts': [],
        'code-line': '        #a = 0\r\n',
        'first-line': 171L,
        'folded-linenos': [],
        'sel-line': 179L,
        'sel-line-start': 5232L,
        'selection_end': 5246L,
        'selection_start': 5246L,
        'zoom': 0L},
                       loc('tests/noisy20band.json'): {'attrib-starts': [],
        'code-line': '{"adBm": -102.0625, "band": "20", "deva": {"max": {"py'\
                     '/tuple": [6.0625, {"freq": 14074000, "py/object": "sme'\
                     'ter.SMeter", "signal_st": {"dBm": -96.0, "sl": "S5"}, '\
                     '"time": "2019-06-30 11:34:35"}]}, "min": {"py/tuple": '\
                     '[1.4375, {"freq": 14100000, "py/object": "smeter.SMete'\
                     'r", "signal_st": {"dBm": -103.5, "sl": "S3"}, "time": '\
                     '"2019-06-30 11:34:37"}]}}, "freqs": {"py/set": [140000'\
                     '00, 14100000, 14074000, 14200000]}, "py/object": "smet'\
                     'eravg.SMeterAvg", "signal_st": {"sl": "S4", "stddv": 3'\
                     '.5771264072343505, "var": 12.795833333333333}, "smlist'\
                     '": [{"freq": 14000000, "py/object": "smeter.SMeter", "'\
                     'signal_st": {"dBm": -105.0, "sl": "S3"}, "time": "2019'\
                     '-06-30 11:34:33"}, {"freq": 14000000, "py/object": "sm'\
                     'eter.SMeter", "signal_st": {"dBm": -104.0, "sl": "S3"}'\
                     ', "time": "2019-06-30 11:34:33"}, {"freq": 14000000, "'\
                     'py/object": "smeter.SMeter", "signal_st": {"dBm": -104'\
                     '.5, "sl": "S3"}, "time": "2019-06-30 11:34:33"}, {"fre'\
                     'q": 14000000, "py/object": "smeter.SMeter", "signal_st'\
                     '": {"dBm": -104.5, "sl": "S3"}, "time": "2019-06-30 11'\
                     ':34:34"}, {"freq": 14074000, "py/object": "smeter.SMet'\
                     'er", "signal_st": {"dBm": -96.5, "sl": "S5"}, "time": '\
                     '"2019-06-30 11:34:35"}, {"py/id": 1}, {"freq": 1407400'\
                     '0, "py/object": "smeter.SMeter", "signal_st": {"dBm": '\
                     '-96.0, "sl": "S5"}, "time": "2019-06-30 11:34:36"}, {"'\
                     'freq": 14074000, "py/object": "smeter.SMeter", "signal'\
                     '_st": {"dBm": -96.0, "sl": "S5"}, "time": "2019-06-30 '\
                     '11:34:36"}, {"freq": 14100000, "py/object": "smeter.SM'\
                     'eter", "signal_st": {"dBm": -104.0, "sl": "S3"}, "time'\
                     '": "2019-06-30 11:34:37"}, {"py/id": 2}, {"freq": 1410'\
                     '0000, "py/object": "smeter.SMeter", "signal_st": {"dBm'\
                     '": -103.5, "sl": "S3"}, "time": "2019-06-30 11:34:38"}'\
                     ', {"freq": 14100000, "py/object": "smeter.SMeter", "si'\
                     'gnal_st": {"dBm": -103.5, "sl": "S3"}, "time": "2019-0'\
                     '6-30 11:34:38"}, {"freq": 14200000, "py/object": "smet'\
                     'er.SMeter", "signal_st": {"dBm": -103.5, "sl": "S3"}, '\
                     '"time": "2019-06-30 11:34:39"}, {"freq": 14200000, "py'\
                     '/object": "smeter.SMeter", "signal_st": {"dBm": -103.5'\
                     ', "sl": "S3"}, "time": "2019-06-30 11:34:40"}, {"freq"'\
                     ': 14200000, "py/object": "smeter.SMeter", "signal_st":'\
                     ' {"dBm": -105.0, "sl": "S3"}, "time": "2019-06-30 11:3'\
                     '4:40"}, {"freq": 14200000, "py/object": "smeter.SMeter'\
                     '", "signal_st": {"dBm": -104.0, "sl": "S3"}, "time": "'\
                     '2019-06-30 11:34:41"}], "time": "2019-06-30 11:34:41"}'\
                     '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 2324L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/quiet20band.json'): {'attrib-starts': [],
        'code-line': '{"adBm": -103.45833333333333, "band": "20", "deva": {"'\
                     'max": {"py/tuple": [0.5416666666666714, {"freq": 14100'\
                     '000, "py/object": "smeter.SMeter", "signal_st": {"dBm"'\
                     ': -104.0, "sl": "S3"}, "time": "2019-06-30 11:28:52"}]'\
                     '}, "min": {"py/tuple": [0.041666666666671404, {"freq":'\
                     ' 14000000, "py/object": "smeter.SMeter", "signal_st": '\
                     '{"dBm": -103.5, "sl": "S3"}, "time": "2019-06-30 11:28'\
                     ':50"}]}}, "freqs": {"py/set": [14000000, 14100000, 142'\
                     '00000]}, "py/object": "smeteravg.SMeterAvg", "signal_s'\
                     't": {"sl": "S3", "stddv": 0.39648073054937955, "var": '\
                     '0.15719696969696972}, "smlist": [{"freq": 14000000, "p'\
                     'y/object": "smeter.SMeter", "signal_st": {"dBm": -103.'\
                     '0, "sl": "S4"}, "time": "2019-06-30 11:28:49"}, {"freq'\
                     '": 14000000, "py/object": "smeter.SMeter", "signal_st"'\
                     ': {"dBm": -103.0, "sl": "S4"}, "time": "2019-06-30 11:'\
                     '28:49"}, {"py/id": 2}, {"freq": 14000000, "py/object":'\
                     ' "smeter.SMeter", "signal_st": {"dBm": -103.0, "sl": "'\
                     'S4"}, "time": "2019-06-30 11:28:50"}, {"freq": 1410000'\
                     '0, "py/object": "smeter.SMeter", "signal_st": {"dBm": '\
                     '-103.5, "sl": "S3"}, "time": "2019-06-30 11:28:51"}, {'\
                     '"freq": 14100000, "py/object": "smeter.SMeter", "signa'\
                     'l_st": {"dBm": -103.0, "sl": "S4"}, "time": "2019-06-3'\
                     '0 11:28:51"}, {"py/id": 1}, {"freq": 14100000, "py/obj'\
                     'ect": "smeter.SMeter", "signal_st": {"dBm": -103.5, "s'\
                     'l": "S3"}, "time": "2019-06-30 11:28:52"}, {"freq": 14'\
                     '200000, "py/object": "smeter.SMeter", "signal_st": {"d'\
                     'Bm": -104.0, "sl": "S3"}, "time": "2019-06-30 11:28:53'\
                     '"}, {"freq": 14200000, "py/object": "smeter.SMeter", "'\
                     'signal_st": {"dBm": -103.5, "sl": "S3"}, "time": "2019'\
                     '-06-30 11:28:54"}, {"freq": 14200000, "py/object": "sm'\
                     'eter.SMeter", "signal_st": {"dBm": -104.0, "sl": "S3"}'\
                     ', "time": "2019-06-30 11:28:54"}, {"freq": 14200000, "'\
                     'py/object": "smeter.SMeter", "signal_st": {"dBm": -103'\
                     '.5, "sl": "S3"}, "time": "2019-06-30 11:28:55"}], "tim'\
                     'e": "2019-06-30 11:28:55"}\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 1L,
        'selection_start': 1L,
        'zoom': 0L},
                       loc('tests/test_a00userinput.py'): {'attrib-starts': [],
        'code-line': 'Test file for need\r\n',
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 29L,
        'selection_end': 47L,
        'selection_start': 47L,
        'zoom': 0L},
                       loc('tests/test_a01flex.py'): {'attrib-starts': [('Te'\
        'stflex|0|',
        13),
        ('Testflex|0|.test05_jsonpickel|0|',
         164)],
        'code-line': '            self.fail("unexpected exception")\r\n',
        'first-line': 111L,
        'folded-linenos': [],
        'sel-line': 175L,
        'sel-line-start': 5188L,
        'selection_end': 5232L,
        'selection_start': 5232L,
        'zoom': 0L},
                       loc('tests/test_a02smeter.py'): {'attrib-starts': [('T'\
        'estsmeter|0|',
        14),
        ('Testsmeter|0|.testinstat|0|',
         45)],
        'code-line': '        self.assertEqual(sms, sms1)\r\n',
        'first-line': 102L,
        'folded-linenos': [],
        'sel-line': 116L,
        'sel-line-start': 3554L,
        'selection_end': 3554L,
        'selection_start': 3554L,
        'zoom': 0L},
                       loc('tests/test_a03smeteravr.py'): {'attrib-starts': [('T'\
        'estsmeteravg|0|',
        19),
        ('Testsmeteravg|0|.test01_instat|0|',
         87),
        ('Testsmeteravg|0|.test01_instat|0|.get_readings|0|',
         126)],
        'code-line': '            # file.close()\r\n',
        'first-line': 29L,
        'folded-linenos': [],
        'sel-line': 131L,
        'sel-line-start': 4134L,
        'selection_end': 4143L,
        'selection_start': 4143L,
        'zoom': 0L},
                       loc('tests/test_a05bandreadings.py'): {'attrib-starts': [('T'\
        'estBandreadings|0|',
        21),
        ('TestBandreadings|0|.tearDownClass|0|',
         56)],
        'code-line': '        flex = Flex(_ui)\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 62L,
        'sel-line-start': 1251L,
        'selection_end': 1296L,
        'selection_start': 1275L,
        'zoom': 0L},
                       loc('tests/test_a06localweather.py'): {'attrib-starts': [],
        'code-line': 'import multiprocessing as mp\r\n',
        'first-line': 63L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 106L,
        'selection_end': 170L,
        'selection_start': 106L,
        'zoom': 0L},
                       loc('tests/test_a07trackermain.py'): {'attrib-starts': [('T'\
        'estTrackermain|0|',
        169),
        ('TestTrackermain|0|.test02_queue_overflow|0|',
         570)],
        'code-line': "            numreadings=futures['transfer'].result()\r"\
                     "\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 628L,
        'sel-line-start': 21766L,
        'selection_end': 21821L,
        'selection_start': 21766L,
        'zoom': 0L},
                       loc('tests/test_b02dbtools.py'): {'attrib-starts': [],
        'code-line': 'import os\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 54L,
        'selection_end': 1285L,
        'selection_start': 54L,
        'zoom': 0L},
                       loc('tests/test_b03postproc.py'): {'attrib-starts': [],
        'code-line': 'from postproc import BandPrams\r\n',
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 127L,
        'selection_end': 127L,
        'selection_start': 127L,
        'zoom': 0L},
                       loc('tests/test_bandreadings.py'): {'attrib-starts': [('T'\
        'estBandreadings|0|',
        31),
        ('TestBandreadings|0|.testradioaccess|0|',
         85)],
        'code-line': "            _br = Bandreadings(['14000000', '14100000'"\
                     ", '14200000'], _ui)\r\n",
        'first-line': 51L,
        'folded-linenos': [],
        'sel-line': 93L,
        'sel-line-start': 2594L,
        'selection_end': 2663L,
        'selection_start': 2663L,
        'zoom': 0L},
                       loc('tests/test_dbtools.py'): {'attrib-starts': [('Te'\
        'stdbtools|0|',
        12),
        ('Testdbtools|0|.testinstat|0|',
         27)],
        'code-line': '        dm = DBTools()\r\n',
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 427L,
        'selection_end': 447L,
        'selection_start': 447L,
        'zoom': 0L},
                       loc('tests/test_deck.py'): {'attrib-starts': [('TestD'\
        'eck|0|',
        12),
        ('TestDeck|0|.test02_load_from_Q|0|',
         136)],
        'code-line': '        self.assertEqual(0, deck.look_left())\r\n',
        'first-line': 152L,
        'folded-linenos': [],
        'sel-line': 159L,
        'sel-line-start': 4302L,
        'selection_end': 4347L,
        'selection_start': 4347L,
        'zoom': 0L},
                       loc('tests/test_deleteme.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 38L,
        'sel-line-start': 620L,
        'selection_end': 620L,
        'selection_start': 620L,
        'zoom': 0L},
                       loc('tests/test_flex.py'): {'attrib-starts': [('Testf'\
        'lex|0|',
        13),
        ('Testflex|0|.setUpClass|0|',
         31)],
        'code-line': '\r\n',
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 32L,
        'sel-line-start': 521L,
        'selection_end': 521L,
        'selection_start': 521L,
        'zoom': 0L},
                       loc('tests/test_noisefloor.py'): {'attrib-starts': [('T'\
        'estnoisefloor|0|',
        12),
        ('Testnoisefloor|0|.tearDown|0|',
         17)],
        'code-line': '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 267L,
        'selection_end': 267L,
        'selection_start': 267L,
        'zoom': 0L},
                       loc('tests/test_smeter.py'): {'attrib-starts': [('Tes'\
        'tsmeter|0|',
        12),
        ('Testsmeter|0|.testinstat|0|',
         27)],
        'code-line': "        sm = SMeter(('ZZSM098;', 12_123_444))  # s6\r"\
                     "\n",
        'first-line': 19L,
        'folded-linenos': [],
        'sel-line': 39L,
        'sel-line-start': 966L,
        'selection_end': 1017L,
        'selection_start': 974L,
        'zoom': 0L},
                       loc('tests/test_smeteravr.py'): {'attrib-starts': [],
        'code-line': 'from userinput import UserInput\r\n',
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 202L,
        'selection_end': 250L,
        'selection_start': 202L,
        'zoom': 0L},
                       loc('tests/test_userinput.py'): {'attrib-starts': [],
        'code-line': '# import datetime\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 56L,
        'selection_end': 58L,
        'selection_start': 58L,
        'zoom': 0L},
                       loc('trackermain.py'): {'attrib-starts': [],
        'code-line': "    'acquireData': CTX.Event(),\r\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 45L,
        'sel-line-start': 1121L,
        'selection_end': 1137L,
        'selection_start': 1126L,
        'zoom': 0L},
                       loc('userinput.py'): {'attrib-starts': [('UserInput|0'\
        '|',
        38)],
        'code-line': 'class UserInput:\r\n',
        'first-line': 148L,
        'folded-linenos': [],
        'sel-line': 38L,
        'sel-line-start': 689L,
        'selection_end': 704L,
        'selection_start': 695L,
        'zoom': 0L},
                       loc('utils.py'): {'attrib-starts': [],
        'code-line': '""" TBD """\r\n',
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 24L,
        'selection_end': 35L,
        'selection_start': 35L,
        'zoom': 0L},
                       loc('../testsamples/tests/test_thisis.py'): {'attrib-'\
        'starts': [('TestController|0|',
                    8),
                   ('TestController|0|.testopen|0|',
                    28)],
        'code-line': '        a = 0\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 31L,
        'sel-line-start': 472L,
        'selection_end': 472L,
        'selection_start': 472L,
        'zoom': 0L}}
proj.auto-rstrip-on-save = 'on-save'
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.indent-style-policy = 'warn'
proj.line-ending-policy = 'convert'
proj.preferred-indent-style = 'spaces-only'
proj.vcs-system-config = ('proj',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'.sleep',
                         u'time',
                         u'Dt',
                         u'sleep',
                         u'base_c',
                         u'MyTime',
                         u'sunup',
                         u'sys',
                         u'need to',
                         u'invalid literal',
                         u': {',
                         u'ZZFA',
                         u'change freq',
                         u'needs to be',
                         u'cmd:',
                         u"f'",
                         u'scan',
                         u'out_queue',
                         u'stop',
                         u'use']
search.search-scope-history = [loc('tests')]
testing.stored-results = (1,
                          [(u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_b03postproc.py',
                            [('Testpostproc.test_01instat',
                              0,
                              None,
                              '',
                              None,
                              1585591747,
                              70),
                             ('Testpostproc.test_001instat',
                              0,
                              None,
                              '',
                              None,
                              1585591747,
                              29)]),
                           (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_a06localweather.py',
                            [('TestLocalweather.test03_run_from_Q',
                              0,
                              None,
                              '',
                              None,
                              1586401521,
                              218),
                             ('TestLocalweather.test02_speed_temp_speed',
                              0,
                              u'need to test gusts\n',
                              '',
                              None,
                              1586401521,
                              197),
                             ('TestLocalweather.test04_lookatObjects',
                              0,
                              None,
                              '',
                              None,
                              1586401521,
                              259),
                             ('TestLocalweather.test01b_instat',
                              0,
                              u"'MyTime' object has no attribute 'get_local_sql_timestamp'\n",
                              '',
                              None,
                              1586401521,
                              112),
                             ('TestLocalweather.test05_gen_sql',
                              0,
                              None,
                              '',
                              None,
                              1586401521,
                              297),
                             ('TestLocalweather.test01a_instat',
                              0,
                              u'CTX should not be defined here ******************************\n',
                              '',
                              None,
                              1586401521,
                              66)]),
                           (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_b01deck.py',
                            [('TestDeck.test03_loadQ',
                              0,
                              'Traceback (most recent call last):\n  File "C'\
                              ':\\Program Files\\Python38\\lib\\multiprocess'\
                              'ing\\queues.py", line 241, in _feed\n    send'\
                              '_bytes(obj)\n  File "C:\\Program Files\\Pytho'\
                              'n38\\lib\\multiprocessing\\connection.py", li'\
                              'ne 200, in send_bytes\n    self._send_bytes(m'\
                              '[offset:offset + size])\n  File "C:\\Program '\
                              'Files\\Python38\\lib\\multiprocessing\\connec'\
                              'tion.py", line 280, in _send_bytes\n    ov, e'\
                              'rr = _winapi.WriteFile(self._handle, buf, ove'\
                              'rlapped=True)\nBrokenPipeError: [WinError 232'\
                              '] The pipe is being closed\n',
                              '',
                              None,
                              1585591747,
                              169),
                             ('TestDeck.test02_appendPushPop',
                              0,
                              None,
                              '',
                              None,
                              1585591747,
                              90),
                             ('TestDeck.test01_instant',
                              0,
                              None,
                              '',
                              None,
                              1585591747,
                              46),
                             ('TestDeck.test02_load_from_Q',
                              0,
                              None,
                              '',
                              None,
                              1585591747,
                              137)]),
                           (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_b02dbtools.py',
                            [('Testdbtools.test_a00instat',
                              0,
                              u'CTX should not be defined here ******************************\n',
                              '',
                              None,
                              1586389971,
                              40),
                             ('Testdbtools.test_a01open',
                              0,
                              None,
                              '',
                              None,
                              1586389971,
                              67),
                             ('Testdbtools.test_a02get_bigint_timestamp',
                              0,
                              u'CTX should not be defined here ******************************\n',
                              '',
                              None,
                              1586390780,
                              102),
                             ('Testdbtools.test_b01setandget_timeref',
                              0,
                              None,
                              '',
                              None,
                              1586389971,
                              116)]),
                           (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_a05bandreadings.py',
                            [('TestBandreadings.test01_instat',
                              0,
                              u'Using serial port: com4\nUsing serial port: com4\n',
                              '',
                              None,
                              1586377666,
                              68),
                             ('TestBandreadings.test02_radioaccess',
                              0,
                              u'Using serial port: com4\n',
                              '',
                              None,
                              1586377666,
                              103),
                             ('TestBandreadings.test03_get_readings',
                              0,
                              u'Using serial port: com4\nUsing serial port: com4\n',
                              '',
                              None,
                              1586377666,
                              171)]),
                           (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_a02smeter.py',
                            [('Testsmeter.testinstat',
                              0,
                              None,
                              '',
                              None,
                              1585591747,
                              46)]),
                           (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_a08trackermain.py',
                            [('TestTrackermain.test003_trimdups',
                              0,
                              u'CTX should not be defined here ******************************\ntest03_trimdups\n',
                              '',
                              None,
                              1585591747,
                              644),
                             ('TestTrackermain.test01a_multiproc_simple',
                              0,
                              u'\ntest01a_threaded_simple\ntest01a_instat continuing at 352967.828\ntest01a_threaded_simple -- end\n',
                              '',
                              None,
                              1585591747,
                              206),
                             ('TestTrackermain.test01b_threaded_simple',
                              0,
                              u'\ntest01b_threaded_simple\ntest01b_instat continuing at 352968.828\n||||||\ntest01b_threaded_simple -- end\n',
                              '',
                              None,
                              1585591747,
                              266),
                             ('TestTrackermain.test02_queue_overflow',
                              'error',
                              u'test02_queue_overflow\ntest02_tqueue_overflow\n 353051.531\ndataQ_reader started\n',
                              '',
                              ('',
                               "<class 'NameError'>",
                               "NameError: name 'NoiseFloorResult' is not de"\
                               "fined",
                               [(u'C:\\Program Files\\Python38\\Lib\\unittest\\case.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\case.py',
                                 60,
                                 'testPartExecutor',
                                 None,
                                 '            yield'),
                                (u'C:\\Program Files\\Python38\\Lib\\unittest\\case.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\case.py',
                                 676,
                                 'run',
                                 None,
                                 '                    self._callTestMethod(t'\
                                 'estMethod)'),
                                (u'C:\\Program Files\\Python38\\Lib\\unittest\\case.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\case.py',
                                 633,
                                 '_callTestMethod',
                                 None,
                                 '        method()'),
                                (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_a08trackermain.py',
                                 'm:\\Python\\Python3_packages\\flexnoiseflo'\
                                 'ortracker\\tests\\test_a08trackermain.py',
                                 630,
                                 'test02_queue_overflow',
                                 None,
                                 "            numreadings = futures['transfe"\
                                 "r'].result()"),
                                (u'C:\\Program Files\\Python38\\Lib\\concurrent\\futures\\_base.py',
                                 'C:\\Program Files\\Python38\\lib\\concurre'\
                                 'nt\\futures\\_base.py',
                                 432,
                                 'result',
                                 None,
                                 '                return self.__get_result()'),
                                (u'C:\\Program Files\\Python38\\Lib\\concurrent\\futures\\_base.py',
                                 'C:\\Program Files\\Python38\\lib\\concurre'\
                                 'nt\\futures\\_base.py',
                                 388,
                                 '__get_result',
                                 None,
                                 '            raise self._exception'),
                                (u'C:\\Program Files\\Python38\\Lib\\concurrent\\futures\\thread.py',
                                 'C:\\Program Files\\Python38\\lib\\concurre'\
                                 'nt\\futures\\thread.py',
                                 57,
                                 'run',
                                 None,
                                 '            result = self.fn(*self.args, *'\
                                 '*self.kwargs)'),
                                (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\trackermain.py',
                                 'm:\\Python\\Python3_packages\\flexnoiseflo'\
                                 'ortracker\\trackermain.py',
                                 334,
                                 'dataQ_reader',
                                 None,
                                 '                            elif isinstanc'\
                                 'e(cnt, NoiseFloorResult):')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1585591747,
                              572),
                             ('TestTrackermain.test01c_threaded_simple',
                              0,
                              u'test0001c_threaded_simple\ntest01c_instat continuing at 352983.953\n||||||\ntest01c_threaded_simple -- end\n',
                              '',
                              None,
                              1585591747,
                              321),
                             ('TestTrackermain.test01e_threaded_simple',
                              'error',
                              u'test01e_threaded_simple\naggrfn at barrier\naggrfn starting\ndataQ_reader started\ntest01e_instat continuing at 353024.984\n||||||\naggrfn ended\n',
                              '',
                              ('',
                               "<class 'NameError'>",
                               "NameError: name 'NoiseFloorResult' is not de"\
                               "fined",
                               [(u'C:\\Program Files\\Python38\\Lib\\unittest\\case.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\case.py',
                                 60,
                                 'testPartExecutor',
                                 None,
                                 '            yield'),
                                (u'C:\\Program Files\\Python38\\Lib\\unittest\\case.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\case.py',
                                 676,
                                 'run',
                                 None,
                                 '                    self._callTestMethod(t'\
                                 'estMethod)'),
                                (u'C:\\Program Files\\Python38\\Lib\\unittest\\case.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\case.py',
                                 633,
                                 '_callTestMethod',
                                 None,
                                 '        method()'),
                                (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_a08trackermain.py',
                                 'm:\\Python\\Python3_packages\\flexnoiseflo'\
                                 'ortracker\\tests\\test_a08trackermain.py',
                                 535,
                                 'test01e_threaded_simple',
                                 None,
                                 "                resr = futures.get('transf"\
                                 "er').result()"),
                                (u'C:\\Program Files\\Python38\\Lib\\concurrent\\futures\\_base.py',
                                 'C:\\Program Files\\Python38\\lib\\concurre'\
                                 'nt\\futures\\_base.py',
                                 432,
                                 'result',
                                 None,
                                 '                return self.__get_result()'),
                                (u'C:\\Program Files\\Python38\\Lib\\concurrent\\futures\\_base.py',
                                 'C:\\Program Files\\Python38\\lib\\concurre'\
                                 'nt\\futures\\_base.py',
                                 388,
                                 '__get_result',
                                 None,
                                 '            raise self._exception'),
                                (u'C:\\Program Files\\Python38\\Lib\\concurrent\\futures\\thread.py',
                                 'C:\\Program Files\\Python38\\lib\\concurre'\
                                 'nt\\futures\\thread.py',
                                 57,
                                 'run',
                                 None,
                                 '            result = self.fn(*self.args, *'\
                                 '*self.kwargs)'),
                                (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\trackermain.py',
                                 'm:\\Python\\Python3_packages\\flexnoiseflo'\
                                 'ortracker\\trackermain.py',
                                 334,
                                 'dataQ_reader',
                                 None,
                                 '                            elif isinstanc'\
                                 'e(cnt, NoiseFloorResult):')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1585591747,
                              477),
                             ('TestTrackermain.test01d_threaded_simple',
                              'error',
                              u'test01d_threaded_simple\ndataQ_reader started\n\ntest01d_instat continuing at 352999.968\n||||||\n',
                              '',
                              ('',
                               "<class 'NameError'>",
                               "NameError: name 'NoiseFloorResult' is not de"\
                               "fined",
                               [(u'C:\\Program Files\\Python38\\Lib\\unittest\\case.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\case.py',
                                 60,
                                 'testPartExecutor',
                                 None,
                                 '            yield'),
                                (u'C:\\Program Files\\Python38\\Lib\\unittest\\case.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\case.py',
                                 676,
                                 'run',
                                 None,
                                 '                    self._callTestMethod(t'\
                                 'estMethod)'),
                                (u'C:\\Program Files\\Python38\\Lib\\unittest\\case.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\case.py',
                                 633,
                                 '_callTestMethod',
                                 None,
                                 '        method()'),
                                (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_a08trackermain.py',
                                 'm:\\Python\\Python3_packages\\flexnoiseflo'\
                                 'ortracker\\tests\\test_a08trackermain.py',
                                 443,
                                 'test01d_threaded_simple',
                                 None,
                                 "                resr = futures.get('transf"\
                                 "er').result()"),
                                (u'C:\\Program Files\\Python38\\Lib\\concurrent\\futures\\_base.py',
                                 'C:\\Program Files\\Python38\\lib\\concurre'\
                                 'nt\\futures\\_base.py',
                                 432,
                                 'result',
                                 None,
                                 '                return self.__get_result()'),
                                (u'C:\\Program Files\\Python38\\Lib\\concurrent\\futures\\_base.py',
                                 'C:\\Program Files\\Python38\\lib\\concurre'\
                                 'nt\\futures\\_base.py',
                                 388,
                                 '__get_result',
                                 None,
                                 '            raise self._exception'),
                                (u'C:\\Program Files\\Python38\\Lib\\concurrent\\futures\\thread.py',
                                 'C:\\Program Files\\Python38\\lib\\concurre'\
                                 'nt\\futures\\thread.py',
                                 57,
                                 'run',
                                 None,
                                 '            result = self.fn(*self.args, *'\
                                 '*self.kwargs)'),
                                (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\trackermain.py',
                                 'm:\\Python\\Python3_packages\\flexnoiseflo'\
                                 'ortracker\\trackermain.py',
                                 334,
                                 'dataQ_reader',
                                 None,
                                 '                            elif isinstanc'\
                                 'e(cnt, NoiseFloorResult):')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1585591747,
                              396)]),
                           (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_a03smeteravr.py',
                            [('Testsmeteravg.test02_variances',
                              0,
                              None,
                              '',
                              None,
                              1585591747,
                              153),
                             ('Testsmeteravg.test01_instat',
                              0,
                              None,
                              '',
                              None,
                              1585591747,
                              88),
                             ('Testsmeteravg.test00_functions',
                              0,
                              None,
                              '',
                              None,
                              1585591747,
                              53)]),
                           (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_a07noisefloor.py',
                            [('Testnoisefloor.test_000SMeter',
                              0,
                              u'CTX should not be defined here ******************************\nUsing serial port: com4\nUsing serial port: com4\n',
                              '',
                              None,
                              1585591747,
                              68),
                             ('Testnoisefloor.test_02Noisefloor_inst',
                              0,
                              u'Using serial port: com4\nUsing serial port: com4\n',
                              '',
                              None,
                              1585591747,
                              102),
                             ('Testnoisefloor.test_01NFResult_inst',
                              0,
                              u'Using serial port: com4\n',
                              '',
                              None,
                              1585591747,
                              75)]),
                           (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_a00userinput.py',
                            [('Testuserinput.testinstat',
                              0,
                              None,
                              '',
                              None,
                              1585591747,
                              29)]),
                           (u'C:\\Program Files\\Python38\\Lib\\unittest\\loader.py',
                            [('_FailedTest.test_a05bandreadings',
                              'error',
                              None,
                              '',
                              ('',
                               "<class 'ImportError'>",
                               "ImportError: Failed to import test module: t"\
                               "est_a05bandreadings\nTraceback (most recent "\
                               "call last):\n  File \"C:\\Program Files\\Pyt"\
                               "hon38\\lib\\unittest\\loader.py\", line 154,"\
                               " in loadTestsFromName\n    module = __import"\
                               "__(module_name)\n  File \"m:\\Python\\Python"\
                               "3_packages\\flexnoisefloortracker\\tests\\te"\
                               "st_a05bandreadings.py\", line 16, in <module"\
                               ">\n    import bandreadings\n  File \"m:\\Pyt"\
                               "hon\\Python3_packages\\flexnoisefloortracker"\
                               "\\bandreadings.py\", line 20, in <module>\n"\
                               "    from smeteravg import factory, SMeterAvg"\
                               ", get_quiet\nImportError: cannot import name"\
                               " 'get_quiet' from 'smeteravg' (m:\\Python\\"\
                               "Python3_packages\\flexnoisefloortracker\\sme"\
                               "teravg.py)",
                               [(u'C:\\Program Files\\Python38\\Lib\\unittest\\case.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\case.py',
                                 60,
                                 'testPartExecutor',
                                 None,
                                 '            yield'),
                                (u'C:\\Program Files\\Python38\\Lib\\unittest\\case.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\case.py',
                                 676,
                                 'run',
                                 None,
                                 '                    self._callTestMethod(t'\
                                 'estMethod)'),
                                (u'C:\\Program Files\\Python38\\Lib\\unittest\\case.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\case.py',
                                 633,
                                 '_callTestMethod',
                                 None,
                                 '        method()'),
                                (u'C:\\Program Files\\Python38\\Lib\\unittest\\loader.py',
                                 'C:\\Program Files\\Python38\\lib\\unittest'\
                                 '\\loader.py',
                                 34,
                                 'testFailure',
                                 None,
                                 '            raise self._exception')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1585526461,
                              33)]),
                           (u'm:\\Python\\Python3_packages\\flexnoisefloortracker\\tests\\test_a01flex.py',
                            [('Testflex.test03_do_cmd',
                              0,
                              u'Using serial port: com4\n',
                              '',
                              None,
                              1585591747,
                              103),
                             ('Testflex.test05_jsonpickel',
                              0,
                              u'Using serial port: com4\n',
                              '',
                              None,
                              1585591747,
                              169),
                             ('Testflex.test10_get_cat_data',
                              0,
                              u'Using serial port: com4\n',
                              '',
                              None,
                              1585591747,
                              144),
                             ('Testflex.test01_instantiate',
                              0,
                              u'Using serial port: com4\nUsing serial port: com4\nUsing serial port: com4\n',
                              '',
                              None,
                              1585591747,
                              68),
                             ('Testflex.test02_open_close',
                              0,
                              u'Using serial port: com4\n',
                              '',
                              None,
                              1585591747,
                              82),
                             ('Testflex.test11_get_cat_dataA',
                              0,
                              u'Using serial port: com4\nUsing serial port: com4\n',
                              '',
                              None,
                              1585591747,
                              184),
                             ('Testflex.test04_save_current_state',
                              0,
                              u'Using serial port: com4\n',
                              '',
                              None,
                              1585591747,
                              118)])],
                          {})
testing.what-results-to-store = 'all'
versioncontrol.show-unregistered-in-status = True
